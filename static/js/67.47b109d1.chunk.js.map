{"version":3,"file":"static/js/67.47b109d1.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  width: calc((100% - 10px) / 3);\n  box-shadow: 0px 0px 13px 1px #a39b9c;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  height: 40px;\n  margin-bottom: 5px;\n  text-align: center;\n  color: black;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Item, MovieTitle, StyledLink } from './MovieItem.styled';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <MovieTitle>{movie.title}</MovieTitle>\n      </StyledLink>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  padding: 5px;\n  background-color: lightBlue;\n  color: white;\n  cursor: pointer;\n  border: 2px solid lightBlue;\n  &:hover,\n  &:focus {\n    border: 2px solid deepPink;\n    background-color: deepPink;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Button, Form, Input } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit, defaultValue }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    const inputQuery = event.target.value;\n    setQuery(inputQuery);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        defaultValue={defaultValue}\n        onChange={handleChange}\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        required\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovieQuery } from 'services/api';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport Loader from 'components/Loader/Loader';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nconst SearchMovies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (searchQuery === null) return;\n\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const movie = await searchMovieQuery(searchQuery);\n\n        setMovies(movie.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovies(searchQuery);\n  }, [searchQuery]);\n\n  const onSubmit = searchValue => {\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <div>\n      <SearchForm defaultValue={searchQuery} onSubmit={onSubmit} />\n      {isLoading && <Loader />}\n      {error !== null && <p>There are no movies for your request {error}</p>}\n      <ul>\n        {movies !== null &&\n          movies.map(movie => {\n            return <MovieItem movie={movie} key={movie.id} />;\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchMovies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_URL = 'ea186e3135adec0d288937ca4b24b3fb';\n\nexport const requestTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY_URL}`\n  );\n\n  return data;\n};\n\n// getTrendingMovies;\n\nexport const searchMovieQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY_URL}&query=${query}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const requestMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY_URL}`\n  );\n\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY_URL}`\n  );\n\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY_URL}`\n  );\n\n  return data;\n};\n"],"names":["Item","styled","StyledLink","Link","MovieTitle","MovieItem","movie","location","useLocation","to","id","state","from","title","Form","Input","Button","SearchForm","onSubmit","defaultValue","useState","query","setQuery","event","preventDefault","onChange","inputQuery","target","value","name","type","autoComplete","autoFocus","placeholder","required","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","searchMovieQuery","results","message","getMovies","searchValue","Loader","map","BASE_URL","KEY_URL","requestTrendingMovies","axios","data","page","requestMovieDetails","movieId","requestMovieCast","requestMovieReviews"],"sourceRoot":""}