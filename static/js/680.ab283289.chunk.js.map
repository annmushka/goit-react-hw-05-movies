{"version":3,"file":"static/js/680.ab283289.chunk.js","mappings":"mNAGaA,EAAOC,EAAAA,GAAAA,GAAH,oGAKJC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kDAIVG,EAAaH,EAAAA,GAAAA,EAAH,6H,SCRVI,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,WACE,SAACE,EAAD,CAAYO,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAML,GAAtD,UACE,SAACH,EAAD,UAAaE,EAAMO,WAI1B,C,kHC0BD,UAnCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBF,GAAa,GADK,mBAGKG,EAAAA,EAAAA,MAHL,OAGVN,EAHU,OAIhBC,EAAUD,EAAOO,SAJD,gDAMhBC,QAAQC,IAAI,KAAMC,SANF,yBAQhBP,GAAa,GARG,4EAAH,qDAYjBE,GACD,GAAE,KAGD,gCACGH,IAAa,SAAC,IAAD,KACd,4CACA,wBACc,OAAXF,GACCA,EAAOW,KAAI,SAAApB,GACT,OAAO,SAAC,IAAD,CAAWA,MAAOA,GAAYA,EAAMI,GAC5C,QAIV,C,+LCpCKiB,EAAW,gCACXC,EAAU,mCAEHP,EAAqB,mCAAG,sGACZQ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,IAFT,uBAC3BE,EAD2B,EAC3BA,KAD2B,kBAK5BA,GAL4B,2CAAH,qDAUrBC,EAAgB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACPJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcC,EADd,kBAC+BI,EAD/B,iBAC6CC,IAFtC,uBACtBH,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBI,EAAmB,mCAAG,WAAMC,GAAN,yFACVN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,oBACkBP,IAFR,uBACzBE,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,sDAQnBM,EAAgB,mCAAG,WAAMD,GAAN,yFACPN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BAC0BP,IAFnB,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBO,EAAmB,mCAAG,WAAMF,GAAN,yFACVN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BAC0BP,IAFhB,uBACzBE,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,qD","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  width: calc((100% - 10px) / 3);\n  box-shadow: 0px 0px 13px 1px #a39b9c;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  height: 40px;\n  margin-bottom: 5px;\n  text-align: center;\n  color: black;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Item, MovieTitle, StyledLink } from './MovieItem.styled';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <MovieTitle>{movie.title}</MovieTitle>\n      </StyledLink>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n  }),\n};\n","import { useState, useEffect } from 'react';\nimport { requestTrendingMovies } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const movies = await requestTrendingMovies();\n        setMovies(movies.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <h1>Trending today</h1>\n      <ul>\n        {movies !== null &&\n          movies.map(movie => {\n            return <MovieItem movie={movie} key={movie.id} />;\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_URL = 'ea186e3135adec0d288937ca4b24b3fb';\n\nexport const requestTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY_URL}`\n  );\n\n  return data;\n};\n\n// getTrendingMovies;\n\nexport const searchMovieQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY_URL}&query=${query}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const requestMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY_URL}`\n  );\n\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY_URL}`\n  );\n\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY_URL}`\n  );\n\n  return data;\n};\n"],"names":["Item","styled","StyledLink","Link","MovieTitle","MovieItem","movie","location","useLocation","to","id","state","from","title","useState","movies","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","requestTrendingMovies","results","console","log","message","map","BASE_URL","KEY_URL","axios","data","searchMovieQuery","query","page","requestMovieDetails","movieId","requestMovieCast","requestMovieReviews"],"sourceRoot":""}